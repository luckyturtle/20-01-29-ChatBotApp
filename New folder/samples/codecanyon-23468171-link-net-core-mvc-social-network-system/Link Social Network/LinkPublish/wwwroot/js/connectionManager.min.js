var WebRtc=WebRtc||{};WebRtc.ConnectionManager=function(){var t,n={},o=[{url:"stun:74.125.142.127:19302"}],r=function(){console.log("UNIMPLEMENTED: _onReadyForStreamCallback")},u=function(){console.log("UNIMPLEMENTED: _onStreamAddedCallback")},i=function(){console.log("UNIMPLEMENTED: _onStreamRemovedCallback")},s=function(n,f,e,o){t=n;r=f||r;u=e||u;i=o||i},h=function(r){console.log("WebRTC: creating connection...");var f=new RTCPeerConnection({iceServers:o});return f.onicecandidate=function(n){n.candidate?(console.log("WebRTC: new ICE candidate"),t.invoke("sendSignal",JSON.stringify({candidate:n.candidate}),r).catch(n=>console.error(n))):console.log("WebRTC: ICE candidate gathering complete")},f.onstatechange=function(){var n={iceConnectionState:f.iceConnectionState,iceGatheringState:f.iceGatheringState,readyState:f.readyState,signalingState:f.signalingState};console.log(JSON.stringify(n))},f.onaddstream=function(n){console.log("WebRTC: adding stream");u(f,n)},f.onremovestream=function(n){console.log("WebRTC: removing stream");i(f,n.stream.id)},n[r]=f,f},c=function(n,i,u){console.log("WebRTC: processing sdp signal");n.setRemoteDescription(new RTCSessionDescription(u),function(){n.remoteDescription.type=="offer"?(console.log("WebRTC: received offer, sending response..."),r(n),n.createAnswer(function(r){n.setLocalDescription(r,function(){t.invoke("sendSignal",JSON.stringify({sdp:n.localDescription}),i).catch(n=>console.error(n))})},function(n){console.log("Error creating session description: "+n)})):n.remoteDescription.type=="answer"&&console.log("WebRTC: received answer")})},l=function(n,t){var i=JSON.parse(t),r=f(n);console.log("WebRTC: received signal");i.sdp?c(r,n,i.sdp):i.candidate&&a(r,n,i.candidate)},a=function(n,t,i){console.log("WebRTC: processing candidate signal");n.addIceCandidate(new RTCIceCandidate(i))},f=function(t){return n[t]||h(t)},v=function(){for(var t in n)e(t)},e=function(t){var r=n[t];r&&(i(null,null),r.close(),delete n[t])},y=function(n,i){var r=f(n);r.addStream(i);console.log("stream added on my end");r.createOffer(function(i){r.setLocalDescription(i,function(){t.invoke("sendSignal",JSON.stringify({sdp:r.localDescription}),n).catch(n=>console.error(n))})},function(n){console.log("Error creating session description: "+n)})};return{initialize:s,newSignal:l,closeConnection:e,closeAllConnections:v,initiateOffer:y}}();