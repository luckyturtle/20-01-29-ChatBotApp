@***********************************************************************************************************************
    * Link  is a Social Network for enable distributed user to involve, collaborate and communicate .
    * Copyright(C) 2019 Indie Sudio. All rights reserved.
    * https://indiestd.com/
    * info@indiestd.com
    *********************************************************************************************************************@

@model IndexViewModel
@using Link.Models.CommentModels;
@using Link.Extensions;
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "";
    Layout = "_Layout";
    var currentUserId = @UserManager.GetUserId(User);
}


<style type="text/css">

    .profile-detail {
        background: #fff;
        padding-top: 10px;
    }

    .user-basic-info {
        padding-top: 0px;
        padding-left: 20px;
        padding-right: 20px;
    }

    .badge {
        display: inline-block;
        min-width: 10px;
        padding: 3px 7px;
        font-size: 12px;
        color: #000000;
        vertical-align: middle;
        text-align: center;
        background-color: #eeeeee;
        border-radius: 10px;
    }

    .body-content {
        padding-top: 0px;
        margin-top: 0px;
        width: 100%;
    }

    .img-profile-thumbnail {
        margin-top: 20px;
        width: 140px;
        height: 140px;
        border: 10px solid rgba(255,255,255,0.3);
    }

    .profile-container-cover {
        background: #008cba;
        margin-top: 45px;
        color: #fff;
        padding-bottom: 10px;
        margin-right: -15px !important;
        margin-left: -15px !important;
    }

    .row {
        margin-left: 0px;
        margin-right: 0px;
    }

    .profile-header-footer {
        width: 100%;
        background-color: white;
        font-size: 12px;
        color: #ADADAD;
        height: 35px;
    }
</style>

<div class="row text-center profile-container-cover">

    <a href="#">
        @if (Model.Avatar != null)
        {
            <img width="200" src="@string.Format("data:image;base64,{0}", Convert.ToBase64String(Model.Avatar))" accept="image/*" class="avatar img-circle  img-profile-thumbnail" alt="avatar">
        }
        else
        {
            <img width="200" src="~/images/avatar.png" accept="image/*" class="avatar img-circle img-profile-thumbnail" alt="avatar">
        }
    </a>
    <div class="row user-basic-info">
        <h1 class="profile-name">@Html.DisplayFor(model => model.Username)</h1>
        <div class="description">@Html.DisplayFor(model => model.Description)</div>
    </div>
    <div class="row">
        <p></p>
        <span class="" data-toggle="buttons" id="follow">

            @if (!Model.IsCurrentProfileForCurrentUser)
            {
                @if (!Model.IsCurrentUserFollowProfile)
                {

                    <label class="btn btn-default active btn-transparent">
                        <input type="radio" name="options" id="option1" autocomplete="off" checked>
                        <i class="fa fa-minus-circle"></i> Unfollow
                    </label>

                    <label class="btn btn-default btn-transparent">
                        <input type="radio" name="options" id="option2" autocomplete="off">
                        <i class="fa fa-plus-circle"></i> Follow
                    </label>

                }
                else
                {
                    <label class="btn btn-default btn-transparent">
                        <input type="radio" name="options" id="option1" autocomplete="off">
                        <i class="fa fa-minus-circle"></i> Unfollow
                    </label>

                    <label class="btn btn-default active btn-transparent">
                        <input type="radio" name="options" id="option2" autocomplete="off" checked>
                        <i class="fa fa-plus-circle"></i> Follow
                    </label>

                }

            }

        </span>

        <span>
            <button class="btn btn-default btn-transparent" title="start chat session "
                    onclick='javascript:register_popup("@Code.GenerateProfileGroupId(Model.UserId,currentUserId)","@Model.Username","@Url.Content("~")","@currentUserId","5")'>
                <i class="fa fa-commenting" aria-hidden="true"></i>
            </button>
        </span>

        <span>
            <button class="btn btn-default btn-transparent " id="video-call-modal" data-id="@Model.Username" data-toggle="modal" title="start video call " >
                <i class="fa fa-video-camera" aria-hidden="true"></i>
            </button>
        </span>

    </div>
    <p></p>
    <div class="row">
        <span class=" badge badge-warning numberOfViewer">@Model.NumberOfViewer viewers</span>
        <span class=" badge badge-info numberOfFollwer">@Model.NumberOfFollwer followers</span>
    </div>



</div>

<div class="container" style="margin-top:2px;">

    <div class="col-md-10 no-paddin-xs">

        <div class="row">

            <!-- left content-->

            <div class="col-md-3">



            </div>

            <div class="profile-info col-md-9 ">
                <ul class="nav nav-tabs" role="tablist">
                    <li role="presentation" class="active"><a href="#home" aria-controls="home" role="tab" data-toggle="tab">Home</a></li>
                    <li role="presentation"><a href="#profile" aria-controls="profile" role="tab" data-toggle="tab">Profile</a></li>
                </ul>
                <div class="tab-content">
                    <div role="tabpanel" class="tab-pane active" id="home">
                        <div class="col-md-12 user-profile-post">
                            <div class="row  ">
                                <p></p>
                                <div id="profile-comments-container"></div>
                            </div>
                        </div>
                    </div>
                    <div role="tabpanel" class="tab-pane " id="profile">
                        <div class="col-md-12 ">
                            <div class="row profile-detail">
                                <div class="col-md-12  ">
                                    <div class="form-group">
                                        <label asp-for="Username"></label>:
                                        @Html.DisplayFor(model => model.Username)
                                    </div>
                                    <div class="form-group">
                                        <label asp-for="Email"></label>:
                                        @Html.DisplayFor(model => model.Email)
                                    </div>
                                    <div class="form-group">
                                        <label asp-for="PhoneNumber"></label>:
                                        @Html.DisplayFor(model => model.PhoneNumber)
                                    </div>
                                </div>
                                <div class="col-md-6">

                                    <div class="form-group">
                                        <label asp-for="BirthDate"></label>:
                                        @Html.DisplayFor(model => model.BirthDate)
                                    </div>

                                    <div class="form-group">
                                        <label asp-for="GenderId"></label>:

                                        @if (Model.GenderId == 1)
                                        {
                                            <span> Male </span>
                                        }
                                        else
                                        {
                                            <span>Female </span>
                                        }

                                    </div>

                                    <div class="form-group">
                                        <label asp-for="SocialMedia"></label>:
                                        @Html.DisplayFor(model => model.SocialMedia)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>

        </div>

    </div>


</div>


@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script type="text/javascript">

        $(document).ready(function () {
            $("#video-call-modal").click(function () {
                $('#calleeUserName').val($(this).data('id'));
                 
                $('#ptpCall').modal('show');
                WebRctApp.startConnection.start();

            });

            $("#follow").click(function () {
                 $.ajax({
                type: 'put',
                url: '@Url.Content("~")/api/Profile/Follow/' + '@Model.UserId',
                success: function (val) {
                    $(".numberOfFollwer").text(val +" followers")
                },
                error: function () {

                },
            });
            });

            $.ajax({
                type: 'put',
                url: '@Url.Content("~")/api/Profile/Viewer/' + '@Model.UserId',
                success: function (val) {
                    $(".numberOfViewer").text(val + " viewers")
                },
                error: function () {

                },
            });

             $('#profile-comments-container').comments({
                textareaPlaceholderText: 'Leave a comment',
                maxRepliesVisible:1,
                enableHashtags: true,
                enablePinging: true,
                 roundProfilePictures: true,
                 enableCommentingField: '@Model.IsCurrentProfileForCurrentUser' == 'True',
                 creator:'@currentUserId',
                 commentContainer:".profile-comments-container",
                 filePath: '@Url.Content("~")/Comments/DownloadAttachment/',
                 commentProfilePicturePath: '@Url.Content("~")/Profile/GetUserProfile/',
                fieldMappings: {
                    id: 'id',
                    parent: 'parent',
                    created: 'created',
                    modified: 'modified',
                    content: 'content',
                    file: 'file',
                    fileURL: 'fileURL',
                    fileMimeType: 'fileMimeType',
                    pings: 'pings',
                    creator: 'creator',
                    fullname: 'fullname',
                    profileURL: 'profileURL',
                    profilePictureURL: 'profilePictureURL',
                    isNew: 'isNew',
                    createdByAdmin: 'createdByAdmin',
                    createdByCurrentUser: 'createdByCurrentUser',
                    upvoteCount: 'upvoteCount',
                    userHasUpvoted: 'userHasUpvoted'
                }, refresh: function () {
                    $('#profile-comments-container').addClass('rendered');
                }, getUsers: function (success, error) {
                    $.ajax({
                        type: 'get',
                        url: '@Url.Content("~")/api/users/',
                        success: function (userArray) {
                            success(userArray)
                        },
                        error: error
                    });
                 },
                 hashtagClicked: function (hashtag) {

                     var win = window.open('@Url.Content("~")/Comments/Hashtag/' + hashtag, '_blank');
                     win.focus();

                 }, loadMoreComments: function (comment) {

                      $.ajax({
                        type: 'get',
                          url: '@Url.Content("~")/api/comments/' + '@Model.UserId' + '/@CommentGroupType.Profile/' + comment.options.commentCount,
                          success: function (commentsArray) {
                              comment.prepareLader(commentsArray);
                          },
                          async: false
                    });
                 },
                 getComments: function (success, error) {
                    $.ajax({
                        type: 'get',
                        url: '@Url.Content("~")/api/comments/'+ '@Model.UserId'+'/@CommentGroupType.Profile/0',
                        success: function (commentsArray) {
                            success(commentsArray)
                        },
                        error: error,
                        async: false
                    });
                 }, postComment: function (commentJSON, success, error) {

                    commentJSON.groupId = '@Model.UserId';
                    commentJSON.commentGroupTypeId = '@CommentGroupType.Profile';
                    $.ajax({
                        type: 'post',
                        url: '@Url.Content("~")/api/comments/',
                        data: commentJSON,
                        success: function (comment) {
                            success(comment)
                        },
                        error: error
                    });
                }, putComment: function (commentJSON, success, error) {
                    commentJSON.groupId = '@Model.UserId';
                    commentJSON.commentGroupTypeId = '@CommentGroupType.Profile';
                    $.ajax({
                        type: 'put',
                        url: '@Url.Content("~")/api/comments/' + commentJSON.id,
                        data: commentJSON,
                        success: function (comment) {
                            success(comment)
                        },
                        error: error
                    });
                }, deleteComment: function (commentJSON, success, error) {
                    $.ajax({
                        type: 'delete',
                        url: '@Url.Content("~")/api/comments/' + commentJSON.id,
                        success: success,
                        error: error
                    });
                }, upvoteComment: function (commentJSON, success, error) {
                    var commentURL = '@Url.Content("~")/api/comments/' + commentJSON.id;
                    var upvotesURL = commentURL + '/upvotes/';
                    var value = (commentJSON.userHasUpvoted == true) ? 1 : 0;

                    $.ajax({
                        type: 'put',
                        url: upvotesURL + value,
                        success: function () {
                            success(commentJSON)
                        },
                        error: error
                    });
                },
                downloadAttachment: function (comment) {
                    var win = window.open('@Url.Content("~")/Comments/DownloadAttachment/' + comment.id, '_blank');
                    win.focus();
                },
                uploadAttachments: function (commentArray, success, error) {
                    $(commentArray).each(function (index, commentJson) {

                        // Create form data
                        var formData = new FormData();
                        $(Object.keys(commentJson)).each(function (index, key) {
                            var value = commentJson[key];
                            if (value) formData.append(key, value);
                        });

                        var tempCommentJson = commentJson;
                        tempCommentJson.file = null;

                        $.ajax({
                            url: '@Url.Content("~")/api/comments/Upload/',
                            type: 'post',
                            data: formData,
                            cache: false,
                            contentType: false,
                            processData: false,
                            success: function (name) {
                                tempCommentJson.fileURL = name;
                                tempCommentJson.groupId = '@Model.UserId';
                                tempCommentJson.commentGroupTypeId = '@CommentGroupType.Profile';
                                $.ajax({
                                    url: '@Url.Content("~")/api/comments/',
                                    type: 'post',
                                    data: tempCommentJson,
                                    success: function (comment) {
                                        success(comment)
                                    },
                                    error: error
                                });
                            },
                            error: function (data) {

                            }
                        });
                    });
                },
            });


            $('.description').readmore({
                lessLink: '<a href="#">Read less</a>'
            });
        });
    </script>
}
